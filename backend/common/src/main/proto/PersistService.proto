syntax = "proto3";
option java_multiple_files = true;
package com.beyt.anouncy.common.persist;

message VoteSummaryRequest {
  string anonymousUserId = 1;
  string regionId = 2;
  repeated string announceIdList = 3;
}

message VoteSummaryPTO {
  string id = 1;
  bool value = 2;
  string announceId = 3;
}

message VoteSummaryListPTO {
  repeated VoteSummaryPTO voteSummaryList = 1;
}

message VoteCountSingleRequest {
  string regionId = 1;
  string announceId = 2;
}

enum RegionTypePTO {
  COUNTRY = 0;
  CITY = 1;
  COUNTY = 2;
}

enum RegionStatusPTO {
  ACTIVE = 0;
  INACTIVE = 1;
}

message RegionPTO {
  string id = 1;
  string name = 2;
  int32 ordinal = 3;
  double latitude = 4;
  double longitude = 5;
  int64 locationId = 6;
  RegionTypePTO type = 7;
  RegionStatusPTO status = 8;
  RegionPTO parentRegion = 9;
}

message VotePTO {
  string id = 1;
  bool value = 2;
  AnnouncePTO announce = 3;
  AnonymousUserPTO anonymousUser = 4;
  RegionPTO region = 5;
  int64 createDate = 6;
}

message AnnouncePTO {
  string id = 1;
  string body = 2;
  AnonymousUserPTO anonymousUser = 3;
  RegionPTO beginRegion = 4;
  RegionPTO currentRegion = 5;
  int64 createDate = 6;
}

message AnonymousUserPTO {
  string id = 1;
}

message AnnounceListPTO {
  repeated AnnouncePTO announceList = 1;
}

message VoteListPTO {
  repeated VotePTO voteList = 1;
}

message RegionListPTO {
  repeated RegionPTO regionList = 1;
}

message AnonymousUserListPTO {
  repeated AnonymousUserPTO anonymousUserList = 1;
}

message VoteCountMultiRequest {
  string regionId = 1;
  repeated string announceIdList = 2;
}

message VoteCountPTO {
  string announceId = 1;
  int64 yes = 2;
  int64 no = 3;
  string currentRegionId = 4;
}

message IdStr {
  string id = 1;
}

message IdStrList {
  repeated IdStr idList = 1;
}

message VoteCountListPTO {
  repeated VoteCountPTO voteCountList = 1;
}

message Count {
  int64 count = 1;
}

message Exist {
  bool exist = 1;
}

message Empty {

}

message IdWithPageable {
  string id = 1;
  PageablePTO pageable = 2;
}

message PageablePTO {
  int32 page = 1;
  int32 size = 2;
}

message AnnounceIdAndAnonymousUserId {
  string announceId = 1;
  string anonymousUserId = 2;
}

service AnnouncePersistService {
  rpc save(AnnouncePTO) returns (AnnouncePTO);
  rpc saveAll(AnnounceListPTO) returns (AnnounceListPTO);
  rpc findById(IdStr) returns (AnnouncePTO);
  rpc existsById(IdStr) returns (Exist);
  rpc findAllById(IdStrList) returns (AnnounceListPTO);
  rpc count(Empty) returns (Count);
  rpc deleteById(IdStr) returns (Empty);
  rpc delete(AnnouncePTO) returns (Empty);
  rpc deleteAllById(IdStrList) returns (Empty);
  rpc deleteAll(AnnounceListPTO) returns (Empty);


  rpc findAllByAnonymousUserId(IdWithPageable) returns (AnnounceListPTO);
  rpc findByIdAndAnonymousUserId(AnnounceIdAndAnonymousUserId) returns (AnnouncePTO);
}

service VotePersistService {
  rpc save(VotePTO) returns (VotePTO);
  rpc saveAll(VoteListPTO) returns (VoteListPTO);
  rpc findById(IdStr) returns (VotePTO);
  rpc existsById(IdStr) returns (Exist);
  rpc findAllById(IdStrList) returns (VoteListPTO);
  rpc count(Empty) returns (Count);
  rpc deleteById(IdStr) returns (Empty);
  rpc delete(VotePTO) returns (Empty);
  rpc deleteAllById(IdStrList) returns (Empty);
  rpc deleteAll(VoteListPTO) returns (Empty);

  rpc getAllVoteCounts(VoteCountMultiRequest) returns (VoteCountListPTO);
  rpc getVoteCount(VoteCountSingleRequest) returns (VoteCountPTO);
  rpc getVoteSummaries(VoteSummaryRequest) returns (VoteSummaryListPTO);
}

service RegionPersistService {
  rpc save(RegionPTO) returns (RegionPTO);
  rpc saveAll(RegionListPTO) returns (RegionListPTO);
  rpc findById(IdStr) returns (RegionPTO);
  rpc existsById(IdStr) returns (Exist);
  rpc findAllById(IdStrList) returns (RegionListPTO);
  rpc count(Empty) returns (Count);
  rpc deleteById(IdStr) returns (Empty);
  rpc delete(RegionPTO) returns (Empty);
  rpc deleteAllById(IdStrList) returns (Empty);
  rpc deleteAll(RegionListPTO) returns (Empty);

  rpc findAllByParentRegionIdIsIn(IdStrList) returns (RegionListPTO);
  rpc findAllByLocationIdIsIn(IdStrList) returns (RegionListPTO);
  rpc findByLocationId(IdStr) returns (RegionPTO);
}

service AnonymousUserPersistService {
  rpc save(AnonymousUserPTO) returns (AnonymousUserPTO);
  rpc saveAll(AnonymousUserListPTO) returns (AnonymousUserListPTO);
  rpc findById(IdStr) returns (AnonymousUserPTO);
  rpc existsById(IdStr) returns (Exist);
  rpc findAllById(IdStrList) returns (AnonymousUserListPTO);
  rpc count(Empty) returns (Count);
  rpc deleteById(IdStr) returns (Empty);
  rpc delete(AnonymousUserPTO) returns (Empty);
  rpc deleteAllById(IdStrList) returns (Empty);
  rpc deleteAll(AnonymousUserListPTO) returns (Empty);
}
